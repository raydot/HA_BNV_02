{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Dependencies.\n// Define class.\n\n\nvar Grid = function (_React$Component) {\n  _inherits(Grid, _React$Component);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _possibleConstructorReturn(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).apply(this, arguments));\n  }\n\n  _createClass(Grid, [{\n    key: 'render',\n    // Render method.\n    value: function render() {\n      var parent = this.props.parent;\n      var desktop = this.props.desktop;\n      var desktopHide = this.props['desktop-hide'];\n      var desktopPush = this.props['desktop-push'];\n      var desktopPull = this.props['desktop-pull'];\n      var desktopPrefix = this.props['desktop-prefix'];\n      var desktopSuffix = this.props['desktop-suffix'];\n      var mobile = this.props.mobile;\n      var mobileHide = this.props['mobile-hide'];\n      var mobilePush = this.props['mobile-push'];\n      var mobilePull = this.props['mobile-pull'];\n      var mobilePrefix = this.props['mobile-prefix'];\n      var mobileSuffix = this.props['mobile-suffix'];\n      var tablet = this.props.tablet;\n      var tabletHide = this.props['tablet-hide'];\n      var tabletPush = this.props['tablet-push'];\n      var tabletPull = this.props['tablet-pull'];\n      var tabletPrefix = this.props['tablet-prefix'];\n      var tabletSuffix = this.props['tablet-suffix']; // Populated later.\n\n      var className = [this.props.className];\n      /*\n        ===================\n        PARENT CLASS NAMES.\n        ===================\n      */\n\n      if (parent) {\n        className.push('grid-parent');\n      }\n      /*\n        ====================\n        DESKTOP CLASS NAMES.\n        ====================\n      */\n\n\n      if (desktop) {\n        className.push('grid-' + desktop);\n      }\n\n      if (desktopHide) {\n        className.push('hide-on-desktop');\n      }\n\n      if (desktopPush) {\n        className.push('push-' + desktopPush);\n      }\n\n      if (desktopPull) {\n        className.push('pull-' + desktopPull);\n      }\n\n      if (desktopPrefix) {\n        className.push('prefix-' + desktopPrefix);\n      }\n\n      if (desktopSuffix) {\n        className.push('suffix-' + desktopSuffix);\n      }\n      /*\n        ===================\n        MOBILE CLASS NAMES.\n        ===================\n      */\n\n\n      if (mobile) {\n        className.push('mobile-grid-' + mobile);\n      }\n\n      if (mobileHide) {\n        className.push('hide-on-mobile');\n      }\n\n      if (mobilePush) {\n        className.push('mobile-push-' + mobilePush);\n      }\n\n      if (mobilePull) {\n        className.push('mobile-pull-' + mobilePull);\n      }\n\n      if (mobilePrefix) {\n        className.push('mobile-prefix-' + mobilePrefix);\n      }\n\n      if (mobileSuffix) {\n        className.push('mobile-suffix-' + mobileSuffix);\n      }\n      /*\n        ===================\n        TABLET CLASS NAMES.\n        ===================\n      */\n\n\n      if (tablet) {\n        className.push('tablet-grid-' + tablet);\n      }\n\n      if (tabletHide) {\n        className.push('hide-on-tablet');\n      }\n\n      if (tabletPush) {\n        className.push('tablet-push-' + tabletPush);\n      }\n\n      if (tabletPull) {\n        className.push('tablet-pull-' + tabletPull);\n      }\n\n      if (tabletPrefix) {\n        className.push('tablet-prefix-' + tabletPrefix);\n      }\n\n      if (tabletSuffix) {\n        className.push('tablet-suffix-' + tabletSuffix);\n      }\n      /*\n        =================\n        BUILD THE MARKUP.\n        =================\n      */\n\n\n      className = className.join(' ').trim().replace(/\\s+/g, ' '); // Expose UI.\n\n      return _react2.default.createElement('div', {\n        className: className\n      }, this.props.children);\n    }\n  }]);\n\n  return Grid;\n}(_react2.default.Component); // Validation\n\n\nGrid.propTypes = {\n  children: _propTypes2.default.node,\n  className: _propTypes2.default.string,\n  parent: _propTypes2.default.bool,\n  desktop: _propTypes2.default.string,\n  'desktop-hide': _propTypes2.default.bool,\n  'desktop-push': _propTypes2.default.string,\n  'desktop-pull': _propTypes2.default.string,\n  'desktop-prefix': _propTypes2.default.string,\n  'desktop-suffix': _propTypes2.default.string,\n  mobile: _propTypes2.default.string,\n  'mobile-hide': _propTypes2.default.bool,\n  'mobile-push': _propTypes2.default.string,\n  'mobile-pull': _propTypes2.default.string,\n  'mobile-prefix': _propTypes2.default.string,\n  'mobile-suffix': _propTypes2.default.string,\n  tablet: _propTypes2.default.string,\n  'tablet-hide': _propTypes2.default.bool,\n  'tablet-push': _propTypes2.default.string,\n  'tablet-pull': _propTypes2.default.string,\n  'tablet-prefix': _propTypes2.default.string,\n  'tablet-suffix': _propTypes2.default.string // Export.\n\n};\nexports.default = Grid;","map":null,"metadata":{},"sourceType":"script"}